<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.artlinux.demo.mapper.EmployeeMapper">
  <resultMap id="BaseResultMap" type="com.artlinux.demo.bean.Employee">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="dept" jdbcType="VARCHAR" property="dept" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="position" jdbcType="VARCHAR" property="position" />
    <result column="Salary" jdbcType="REAL" property="salary" />
  </resultMap>
  <sql id="Base_Column_List">
    id, dept, name, position, Salary
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap"> select <include
      refid="Base_Column_List" /> from employee where id = #{id,jdbcType=VARCHAR} </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from employee
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.artlinux.demo.bean.Employee">
    insert into employee (id, dept, name,
    position, Salary)
    values (#{id,jdbcType=VARCHAR}, #{dept,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
    #{position,jdbcType=VARCHAR}, #{salary,jdbcType=REAL})
  </insert>
  <insert id="insertSelective" parameterType="com.artlinux.demo.bean.Employee"> insert into employee <trim
      prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="dept != null">
        dept,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="position != null">
        position,
      </if>
      <if test="salary != null">
        Salary,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="dept != null">
        #{dept,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="position != null">
        #{position,jdbcType=VARCHAR},
      </if>
      <if test="salary != null">
        #{salary,jdbcType=REAL},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.artlinux.demo.bean.Employee"> update
    employee <set>
      <if test="dept != null">
        dept = #{dept,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="position != null">
        position = #{position,jdbcType=VARCHAR},
      </if>
      <if test="salary != null">
        Salary = #{salary,jdbcType=REAL},
      </if>
    </set> where id =
    #{id,jdbcType=VARCHAR} </update>
  <update id="updateByPrimaryKey" parameterType="com.artlinux.demo.bean.Employee">
    update employee
    set dept = #{dept,jdbcType=VARCHAR},
    name = #{name,jdbcType=VARCHAR},
    position = #{position,jdbcType=VARCHAR},
    Salary = #{salary,jdbcType=REAL}
    where id = #{id,jdbcType=VARCHAR}
  </update>


  <select id="selectByAll" resultType="integer"> select count(0) from employee where 1=1 <if
      test="id != null">
      AND employee.id like concat('%',#{id},'%')
    </if>
    <if test="dept != null">
      AND employee.dept like concat('%',#{dept},'%')
    </if>
    <if test="name != null">
      AND employee.name like concat('%',#{name},'%')
    </if>
    <if test="position   != null">
      AND employee.position like concat('%',#{position},'%')
    </if>
    <if test="Salary != null">
    AND employee.Salary like concat('%',#{Salary},'%')
    </if>
  </select>

  <select id="selectListByAll" resultMap="BaseResultMap"> select <include refid="Base_Column_List"></include>
    from employee where 1=1 <if test="id != null">
      AND employee.id like concat('%',#{id},'%')
    </if>
    <if test="dept != null">
      AND employee.dept like concat('%',#{dept},'%')
    </if>
    <if test="name != null">
      AND employee.name like concat('%',#{name},'%')
    </if>
    <if test="position   != null">
      AND employee.position like concat('%',#{position},'%')
    </if>
    <if test="Salary != null">
    AND employee.Salary like concat('%',#{Salary},'%')
    </if> limit
    #{queryNumber,jdbcType=INTEGER},#{StepSize,jdbcType=INTEGER} </select>

</mapper>